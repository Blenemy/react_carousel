{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","infinite","transtaleX","infiniteState","e","target","checked","setState","frameSizeState","currentTarget","value","stepState","itemWidthState","animationState","this","images","props","containerWidth","maxContainerWidth","length","translateShift","containerStyle","maxWidth","listAnimationStyle","transition","transform","className","classnames","Carousel__button","Carousel__button_left","disabledLeft","type","disabled","onClick","style","map","item","height","width","src","alt","match","join","Carousel__button_right","disabledRight","htmlFor","onInput","min","max","defaultValue","Math","round","onChange","React","Component","App","display","justifyContent","fontSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10399f11.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n}\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n  transtaleX: number,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    transtaleX: 0,\n  };\n\n  infiniteState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      this.setState({ infinite: true });\n\n      return;\n    }\n\n    if (!e.target.checked) {\n      this.setState({ infinite: false });\n    }\n  };\n\n  frameSizeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +e.currentTarget.value,\n    });\n  };\n\n  stepState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: +e.currentTarget.value,\n    });\n  };\n\n  itemWidthState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +e.currentTarget.value,\n    });\n  };\n\n  animationState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: +e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      transtaleX,\n    } = this.state;\n\n    const { images } = this.props;\n\n    const containerWidth = frameSize * itemWidth;\n    const maxContainerWidth = itemWidth * images.length;\n    const translateShift = step * itemWidth;\n\n    const containerStyle = {\n      maxWidth: `${containerWidth}px`,\n    };\n\n    const listAnimationStyle = {\n      transition: `all ${animationDuration / 1000}s ease 0s`,\n      transform: `translateX(${transtaleX}px)`,\n    };\n\n    const handleLeftClick = () => {\n      if (transtaleX === 0 && infinite) {\n        this.setState({ transtaleX: -maxContainerWidth + containerWidth });\n\n        return;\n      }\n\n      if (transtaleX + translateShift > 0) {\n        this.setState({ transtaleX: 0 });\n\n        return;\n      }\n\n      this.setState({ transtaleX: transtaleX + translateShift });\n    };\n\n    const handleRightClick = () => {\n      if (transtaleX === -maxContainerWidth + containerWidth && infinite) {\n        this.setState({ transtaleX: 0 });\n\n        return;\n      }\n\n      if (transtaleX + (-translateShift)\n      - containerWidth <= -maxContainerWidth) {\n        this.setState({\n          transtaleX: -maxContainerWidth + containerWidth,\n        });\n\n        return;\n      }\n\n      this.setState({ transtaleX: transtaleX + -translateShift });\n    };\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"Carousel\">\n          <button\n            className={classnames({\n              Carousel__button: true,\n              Carousel__button_left: true,\n              disabledLeft: transtaleX === 0 && !infinite,\n            })}\n            type=\"button\"\n            disabled={transtaleX === 0 && !infinite}\n            onClick={handleLeftClick}\n          >\n            {' '}\n          </button>\n          <div className=\"Carousel__container\" style={containerStyle}>\n            <ul className={`Carousel__list ${infinite ? '_active' : ''}`} style={listAnimationStyle}>\n              {images.map(item => (\n                <li\n                  key={item}\n                >\n                  <img\n                    height={itemWidth}\n                    width={itemWidth}\n                    src={item}\n                    alt={item.match(/\\d+/g)?.join('')}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <button\n            type=\"button\"\n            className={classnames({\n              Carousel__button: true,\n              Carousel__button_right: true,\n              disabledRight:\n                transtaleX === -maxContainerWidth + containerWidth && !infinite,\n            })}\n            data-cy=\"next\"\n            disabled={\n              transtaleX === -maxContainerWidth + containerWidth && !infinite\n            }\n            onClick={handleRightClick}\n          >\n            {' '}\n          </button>\n        </div>\n        <div className=\"wrapper__items\">\n          <div className=\"wrapper__item wrapper__item-framesize\">\n            <label htmlFor=\"\">\n              {`Frame size is ${frameSize} `}\n              <input\n                onInput={this.frameSizeState}\n                type=\"range\"\n                min={2}\n                max={5}\n                defaultValue={frameSize}\n              />\n            </label>\n          </div>\n          <div className=\"wrapper__item wrapper__item-step\">\n            <label htmlFor=\"\">\n              {`Step number is ${step} `}\n              <input\n                onInput={this.stepState}\n                type=\"range\"\n                min={2}\n                max={5}\n                defaultValue={step}\n              />\n            </label>\n          </div>\n          <div className=\"wrapper__item wrapper__item-itemWidth\">\n            <label htmlFor=\"\">\n              {`Itemwidth is ${itemWidth}px `}\n              <input\n                onInput={this.itemWidthState}\n                type=\"range\"\n                min={130}\n                max={200}\n                defaultValue={itemWidth}\n              />\n            </label>\n          </div>\n          <div className=\"wrapper__item wrapper__item-animationDuration\">\n            <label htmlFor=\"\">\n              {`Animation duration is ${Math.round(animationDuration / 1000)}s `}\n              <input\n                onInput={this.animationState}\n                type=\"range\"\n                min={1000}\n                max={3000}\n                defaultValue={animationDuration}\n              />\n            </label>\n          </div>\n          <div className=\"wrapper__item wrapper__item-infinite\">\n            <label htmlFor=\"\">\n              {'Infinite '}\n              <input\n                onChange={this.infiniteState}\n                type=\"checkbox\"\n              />\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './components/reset.scss';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component<{}, {}> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '30px',\n          }}\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}